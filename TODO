
The angular.json: "outputPath": "../webapp" to be the root OR "outputPath": "../webapp/ngApp/"  to be in Http://localhost:8080/ngApp
the pom.xml <argument>--base-href=/</argument> to be root OR <argument>--base-href=/ngApp</argument> to be in Http://localhost:8080/ngApp

https://stackoverflow.com/questions/38532210/how-to-integrate-angular-2-java-maven-web-application


TODO:

//TODO new angular screen where all the gcode are (gcode file handler)  - new Screen ( to del)  -- could be done on the file upload screen

//TODO print screen
	//on the angular print screen , replace time by drop down of all the prints. Print service will return a list of gcode files in a string array !!DONE!!
	//handle stop command !!DONE!!
	//add new component that verify if printer is active .. through websocket!!!!!!!!??
 
printer handle errors (Rteurn to start and end).
install new LEDs in the enclosure.
when stopping a print , the underling thread is not cancelled and the print SMS is sent.


Test:
Test smoke alarm system.


Done:
new arduino code to handle multiple serial returns.. <ss> <sda>
Update arduino code to control new fan
Connect printer to raspberry pi. Create usb cable.
Print new Inline fan and install.
//TODO File Upload screen - new screen   !!DONE!!
	//On the angular print screen a new upload button that will take you to the file upload screen. !!DONE!!
	//add checkbox to specify if want to print right away. !!DONE!!
		//the checkbox will only be aivailaible if the printer is connected. SHEVLED
	//button to submit upload. !!DONE!!
--> java new file upload service.	 !!DONE!!
//TODO main screen DASH board 		
	//push pre-heat sequence to angular as well as time.!!DONE!!
	//when you click on print from the print screen, the dashboard banner will 1st display temp of nozzle and temp of bed heating up. !!DONE!!
	//after the time estimated will be displayed.  !!DONE!!
	//if any errors, it will be displayed there also..
--> java web socket that will push that information.
	